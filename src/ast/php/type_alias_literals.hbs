<?php declare(strict_types=1);

// NOTE: This file is autogenerated, please do not edit manually.

namespace {{namespace}};

final class {{name}} implements \JsonSerializable
{
    /**
     * @var array<string>
     */
    private const ALLOWED_VALUES = [
        {{#each items}}
        {{{this}}},
        {{/each}}
    ];

    /**
     * @var string
     */
    private $value;

    public function __construct(string $value)
    {
        if (!in_array($value, self::ALLOWED_VALUES, true)) {
            throw new \InvalidArgumentException(
                sprintf('Value "%s" is not valid. Accepted ones are: %s', $value, implode(',', self::ALLOWED_VALUES))
            );
        }

        $this->value = $value;
    }

    public function __toString(): string
    {
        return $this->value;
    }

    public function getValue(): string
    {
        return $this->value;
    }

    public function jsonSerialize()
    {
        return $this->value;
    }

    public static function jsonDeserialize(string $json): self
    {
        $decoded = json_decode($json);

        return new self($decoded);
    }
}
