<?php declare(strict_types=1);

// NOTE: This file is autogenerated, please do not edit manually.

namespace {{namespace}};

final class {{name}} implements \JsonSerializable
{
    {{#each items}}
    /**
     * @var {{this.type.doc}}
     */
    private ${{this.name}};
    {{#unless @last}}

    {{/unless}}
    {{/each}}
{{#unlessEmpty}}{{phpdocParams items}}{{/unlessEmpty}}
    public function __construct(
        {{#each items}}
        {{this.type.code}}{{#if this.type.code}} {{/if}}${{this.name}}{{#unless @last}},{{/unless}}
        {{/each}}
    ) {
        {{#each items}}
        $this->{{this.name}} = ${{this.name}};
        {{/each}}
    }

    public function jsonSerialize()
    {
        return [
            {{#each items}}
            '{{this.name}}' => $this->{{this.name}},
            {{/each}}
        ];
    }

    public static function jsonDeserialize(string $json): self
    {
        $decoded = json_decode($json, true);

        return new self(
            {{#each items}}
            $decoded['{{this.name}}'] ?? null{{#unless @last}},{{/unless}}
            {{/each}}
        );
    }

    {{#each items}}
    public function {{this.name}}(){{#if this.type.code.length}}: {{this.type.code}}{{/if}}
    {
        return $this->{{this.name}};
    }
    {{#unless @last}}

    {{/unless}}
    {{/each}}
}
